{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Bookman Old Style;}
{\f1\fnil\fcharset0\fprq0\fttruetype NULL;}
{\f2\fnil\fcharset0\fprq0\fttruetype Arial;}
{\f3\fnil\fcharset0\fprq0\fttruetype Courier New;}
{\f4\fnil\fcharset0\fprq0\fttruetype Symbol;}
{\f5\fnil\fcharset0\fprq0\fttruetype Dingbats;}
{\f6\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f7\fnil\fcharset0\fprq0\fttruetype Garamond;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red204\green204\blue204;}
{\stylesheet
{\s6\sl240\slmult1\tx1584\sbasedon38\snext37 Chapter Heading;}
{\s49\sl240\slmult1\fi-431\li720\sbasedon41 Upper Roman List;}
{\s23\sl240\slmult1\li720\f0\fs24\sbasedon37 List 2;}
{\s24\sl240\slmult1\li1080\f0\fs24\sbasedon37\snext13 List 3;}
{\s25\sl240\slmult1\li1800\f0\fs24\sbasedon37 List 4;}
{\s26\sl240\slmult1\li2160\f0\fs24\sbasedon37 List 5;}
{\s35\sl240\slmult1\fi-431\li720\sbasedon41 Lower Case List;}
{\*\cs8\sl240\slmult1\f6\fs20 Default Paragraph Font;}
{\s2\sl240\slmult1\f0\fs24\sbasedon37 Body Text;}
{\s47\sl240\slmult1\fi-431\li720 Triangle List;}
{\s15\sl240\slmult1\sb440\sa60\f2\fs36\b\sbasedon37\snext2 Heading 1;}
{\s16\sl240\slmult1\sb440\sa60\f2\fs32\i\b\sbasedon37\snext2 Heading 2;}
{\s4\sl240\slmult1\fi-431\li720 Bullet List;}
{\s18\sl240\slmult1\f2\fs24\i\sbasedon37\snext2 Heading 4;}
{\s20\sl240\slmult1\fi-431\li720 Heart List;}
{\s1\sl240\slmult1\li1440\ri1440\sa117\sbasedon37 Block Text;}
{\s44\sl240\slmult1\fi-431\li720 Square List;}
{\s42\sl240\slmult1\f3\sbasedon37 Plain Text;}
{\*\cs13\sl240\slmult1\fs20\sbasedon37 Footnote Text;}
{\s17\sl240\slmult1\sb440\sa60\f2\fs28\b\sbasedon37\snext2 Heading 3;}
{\s41\sl240\slmult1\fi-431\li360\ri720\f0\fs24\sbasedon22 Numbered List;}
{\s9\sl240\slmult1\fi-431\li720 Diamond List;}
{\s27\sl240\slmult1\f0\fs24\sbasedon37 List Bullet 2;}
{\s28\sl240\slmult1\li1080\tx1080\f0\fs24\sbasedon37 List Bullet 3;}
{\s29\sl240\slmult1\f0\fs24\sbasedon37 List Bullet 4;}
{\s30\sl240\slmult1\f0\fs24\sbasedon37 List Bullet 5;}
{\s48\sl240\slmult1\fi-431\li720\sbasedon41 Upper Case List;}
{\s22\sl240\slmult1\li360\f0\fs24\sbasedon2 List;}
{\s3\sl240\slmult1\fi-431\li720 Box List;}
{\s37\sl240\slmult1\f0\fs24\lang1033 Normal;}
{\s21\sl240\slmult1\fi-431\li720 Implies List;}
{\s14\sl240\slmult1\fi-431\li720 Hand List;}
{\s31\sl240\slmult1\li720\f0\fs24\sbasedon37 List Number 2;}
{\s32\sl240\slmult1\li1080\f0\fs24\sbasedon37 List Number 3;}
{\s45\sl240\slmult1\fi-431\li720 Star List;}
{\s43\sl240\slmult1\tx1584\sbasedon38\snext37 Section Heading;}
{\s33\sl240\slmult1\tx1440\f0\fs24\sbasedon37 List Number 4;}
{\s5\sl240\slmult1\li360\ri720\sa117\tx360\f0\fs24\sbasedon22 Bulleted List;}
{\s46\sl240\slmult1\fi-431\li720 Tick List;}
{\s34\sl240\slmult1\li1800\f0\fs24\sbasedon37 List Number 5;}
{\s7\sl240\slmult1\fi-431\li720 Dashed List;}
{\s36\sl240\slmult1\fi-431\li720\sbasedon37 Lower Roman List;}
{\*\cs12\sl240\slmult1\fs20\super Footnote Reference;}
{\*\cs11\sl240\slmult1\sbasedon37 Endnote Text;}
{\*\cs10\sl240\slmult1\fs20\super Endnote Reference;}
{\s38\sl240\slmult1\tx431\sbasedon15\snext37 Numbered Heading 1;}
{\s39\sl240\slmult1\tx431\sbasedon16\snext37 Numbered Heading 2;}
{\s40\sl240\slmult1\tx431\sbasedon17\snext37 Numbered Heading 3;}
{\s19\sl240\slmult1\f7\fs20\sbasedon37\snext2 Heading 5;}}
{\*\listtable
{\list\listtemplateid1006\listsimple{\listlevel\levelnfc23\levelstartat0\levelspace0\levelfollow0\fi-431\li720{\leveltext\'01\'b7 ;}{\levelnumbers;}\f4}\listid1003}}
{\*\listoverridetable
{\listoverride\listoverridecount0\listid1003\levelnfc23\levelstartat0\levelspace0\levelfollow0\fi-431\li720{\leveltext\'01\'b7 ;}{\levelnumbers;}\f4\ls1}}

\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\ftnrestart\ftnrstpg\aftnstart1\aftnrestart\aendnotes\aenddoc\facingp\titlepg{\info}\deftab720\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctl
\sectd\sbknone\colsx360\margtsxn720\margbsxn720\marglsxn1080\margrsxn1080\pgncont\ltrsect
\pard\plain\ltrpar\qc\sl240\slmult1\itap0{\f0\fs48\lang1033{\*\listtag0}\abinodiroverride\ltrch Testing with Apache::Test}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs48\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When learning about mod_perl and Apache, it helps to apply what you've studied by writing your own handlers. In this vein, I set out to write a set of modules to provide comprehensive access, authentication and authorization functionality. Where are these wondrous modules? -It's all about the journey itself right, not whether or not the destination is reached?}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Where better to start than a simple translation phase handler to set a session identifier in a cookie, or failing that embedded in the url itself? The fruits of that labor, AxS::Session, are listed in the next section.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Once you've written your Apache module, exposed it to a bit of peer review, and cleaned it up until it's presentable... Is it ready to be shared with the CPAN masses? ...Did you write any tests? What? You say, Apache modules are nigh untestable? Not anymore! With Stas Beckman's Apache::Test framework in hand I hope to show by example how it can be done.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In short, }{\f2\fs24\lang1033{\*\listtag0}Apache::Test provides a framework for testing Apache based applications and components. The framework provides a self-contained environment for running Apache with test specific configurations and provides some additional HTTP testing tools. All of which is accessible via the familiar "make test" procedure most people already use when downloading and installing modules from CPAN.}
\par\pard\plain\ltrpar\ql\sb440\sa60\s15\sl240\slmult1\itap0{\f2\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch AxS::Session }
\par\pard\plain\ltrpar\ql\sb440\sa60\s16\sl240\slmult1\itap0{\f2\fs32\i\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Synopsis}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AxS::Session is a mod_perl translation phase handler. It generates unique session identifiers which are set and retrieved from cookies or embedded within URLs. The identifier is then accessible via the Apache request object for the life of the request. The most common use of unique session identifiers is to serve as a key for the storage of persistent client data.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Add the following to your httpd.conf (or equivalent) and restart apache:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PerlModule AxS::Session}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PerlTransHandler AxS::Session}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch And in code executed after the translation phase:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch my $session_id = $r->notes('AxS_SESSION');}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\*\abitableprops table-col-spacing:0.02in; table-column-leftpos:0.0000in; table-column-props:0.3321in/6.7175in/}\par{\*\abicellprops left-attach:0; right-attach:1; top-attach:0; bot-attach:1; bot-color:000000; bot-style:solid; bot-thickness:0.000000in; left-color:000000; left-style:solid; left-thickness:0.000000in; right-color:000000; right-style:solid; right-thickness:0.000000in; top-color:000000; top-style:solid; top-thickness:0.000000in}{
\trowd \itap1\trgaph7\trql\trrh0\trleft0\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\cltxlrtb\clbrdrt\brdrs\brdrw0\brdrcf0 \clbrdrl\brdrs\brdrw0\brdrcf0 \clbrdrb\brdrs\brdrw0\brdrcf0 \clbrdrr\brdrs\brdrw0\brdrcf0 \cellx492\clvertalt\cltxlrtb\clbrdrt\brdrs\brdrw0\brdrcf0 \clbrdrl\brdrs\brdrw0\brdrcf0 \clbrdrb\brdrs\brdrw0\brdrcf0 \clbrdrr\brdrs\brdrw0\brdrcf0 \cellx10165
\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 01}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 02}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 03}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 04}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 05}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 06}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 07}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 08}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 09}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 10}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 11}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 12}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 13}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 14}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 15}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 16}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 17}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 18}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 19}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 20}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 21}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 22}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 23}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 24}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 25}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 26}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 27}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 28}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 29}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 30}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 31}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 32}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 33}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 34}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 35}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 36}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 37}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 38}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 39}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 40}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 41}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 42}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 43}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 44}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 45}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 46}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 47}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 48}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 49}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 50}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 51}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 52}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 53}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 54}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 55}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 56}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 57}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 58}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 59}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 60}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 61}\cell{\*\abiendcell}{\*\abicellprops left-attach:1; right-attach:2; top-attach:0; bot-attach:1; bot-color:000000; bot-style:solid; bot-thickness:0.000000in; left-color:000000; left-style:solid; left-thickness:0.000000in; right-color:000000; right-style:solid; right-thickness:0.000000in; top-color:000000; top-style:solid; top-thickness:0.000000in}
\pard\plain\ltrpar\ql\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch package AxS::Session;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Digest::MD5 qw(md5_hex);}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Apache::Constants qw(DECLINED REDIRECT OK);}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch $VERSION = '0.03';}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch $COOKIE  = $PATH = 1;             # Support embedding session identifier in}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch $EXPIRE  = 24 * 60 * 60;          # seconds in 24 hours}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch $NAME    = 'AxS_SESSION';}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch $MATCH   = undef; # qr/\\.html?$/; # session id's only for matching uri's}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch sub handler \{}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   my $r = shift;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   return DECLINED  unless $r->is_initial_req;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   my ($id, %args);}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   %args = $r->args;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   if ($COOKIE) \{}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     my $h = $r->header_in('Cookie');}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     if ($h) \{}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       /^\\Q$NAME\\E=([0-9a-f]\{32\})$/ and $id = $1 and last  for split /;\\s*/, $h;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     $r->notes('AxS_COOKIE' => $id ? 1 : 0);}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     if ($id and exists $args\{'CookieCheck'\}) \{}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       delete $args\{'CookieCheck'\}; # leave a clean uri}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       my $q = join ';', map \{"$_=$args\{$_\}"\} keys %args;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       $r->header_out('Location', $r->uri . ($q ? '?' . $q : ''));}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       return REDIRECT}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   if ($PATH) \{ # relative path css, etc. need id pruned from uri regardless}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     $id = $1 and $r->uri("$2")  if $r->uri =~ m#^/([0-9a-f]\{32\})(/.*)#;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   if ($id) \{}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     $r->notes($NAME => $id);}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     return DECLINED;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   return DECLINED  if defined $MATCH and $r->uri !~ m/$MATCH/;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   $id = md5_hex($$.time.\{\}.rand()); # Make session id}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   if (not exists $args\{'CookieCheck'\}) \{}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     $r->err_header_out('Set-Cookie', }
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch                        join(';',}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch                        $NAME .'=' . $id,}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch                        'expires=' . scalar gmtime(time + $EXPIRE),}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch                        'path=/',}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch                        'domain='  . $r->get_server_name,));}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     $r->header_out('Location',}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch                    $r->uri.'?'.($r->args?$r->args.';':'').'CookieCheck=1');}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   \} else \{ # mangle uri and redirect}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     delete $args\{'CookieCheck'\};}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     my $q = join ';', map \{"$_=$args\{$_\}"\} keys %args;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     $r->header_out('Location', "/$id" . $r->uri . ($q ? '?' . $q : ''));}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch   return REDIRECT;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 1;}
\par\pard\plain\ltrpar\ql\s37\sl240\slmult1\intbl\itap1{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch __END__}\cell{\*\abiendcell}\row}{\*\abiendtable}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb440\sa60\s16\sl240\slmult1\itap0{\f2\fs32\i\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Code Commentary}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In the case that cookies are supported, the first request from a client for the website will generate 2 redirects. The first redirect attempts to set a session identifier assignment via a cookie, leaving a trace of this attempt in the query string. The second redirect is required to return the query string to its initial state. All subsequent request do not require redirects. At least until the cookie expires.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When cookies aren't supported, the second redirect will instead issue a redirect for a URL with an embedded session identifier. If AxS::Session cookie support were explicitly disabled for all clients, only one redirect would be necessary. With URL embedded identifiers, it is of paramount importance that pages served dynamically rewrite references to local URLs to perpetuate the session. Whereas cookies persist between sessions, it is likely that unless bookmarked, each initial access to the site by a browser will require at least one redirect.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 1-5 Set the package name, version, and included a few useful modules}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 6-9 Set up a few global configuration variables, setting the stage for a future version to rework them into Apache Configuration Directives. $COOKIE and $PATH if true, enable insertion of session identifiers into cookies and URLs respectively. $EXPIRE sets how long generated cookies will last. $NAME is the key by which the session identifier may be recalled from $r->notes. And $MATCH, a regex which the URL must match before a session identifier will be generated. By default, all URLs are candidates for session identifiers. If you don't have a separate image server or web server for handling static files this may not be desirable. In such cases, you should set $MATCH to match whatever URLs you intend to handle session specific requests.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 11-15 start the handler off on a good footing. Handlers receive the Apache request object which by convention is assigned to $r. Line 13 checks to make sure this is the first time it has been invoked for this request, and short-circuiting to avoid unnecessary work if otherwise. Internal redirects are an example of where this code would be exercised. Next lexical variables $id and %args are created, and %args is given the query string's contents if any.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 17-22 look for a pre-existing cookie session identifier in the request's headers; short-circuiting as soon as it is found. If an identifier is found, it is stored in $id. Last, we stash a note away in $r->notes(AxS_Cookie) letting us know if cookies are enabled or not. Something that'll be useful later when you're deciding whether or not to rewrite references to local URLs to embed the session identifier.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 23-28 are a bit tricky. If a session identifier wasn't found in a cookie on the first pass, code a little further down is going try to set the cookie along with an argument in the query string and issue a redirect. The reason for this, is that there is no clear way to determine if cookies are enabled other than to try setting one. So, these lines use the 'CookieCheck' parameter to recognize the second pass where we've explicitly attempted to set a cookie. If the session identifier is found, we redirect the request back to a cleaned-up URL (sans 'CookieCheck').}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 31-33 To protect ourselves from relative URLs, we check and remove session identifiers from all URLs not just those that match $MATCH. If an identifier was found it is stored in $id.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 35-38 If a session identifier has been found, set the request note and return DECLINED to let the request pass through to the next handler. }
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch line 40 Return DECLINED if the URL doesn't match MATCH. I.e., only allow those requests to fall through which we wish to have session identifiers.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch line 42 Borrowed from Apache::Session, this line uses the Digest::MD5 module to create and assign a unique identifier to $id. The md5 hash is based on the process id, current time, the memory address of an anonymous hash, and a random number.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch lines 44-58 Here's where the tricky stuff I alluded to earlier happens. If this is the first pass through and a session identifier wasn't found, we set the cookie and add 'CookieCheck' to the query string in the Location field in the header so we can recognize the attempt. On the other hand, if we reached this point with 'CookieCheck' in the query string, then we know cookies are unavailable. So we add the identifier to the URL and remove 'CookieCheck' from the Location field in the header. Finally, we issue our redirect.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page Apache::Test}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb440\sa60\s16\sl240\slmult1\itap0{\f2\fs32\i\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Why Test?}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch It is all to easy to hammer out a bit of code for a feature, try it out to see if it works, and move on to the next feature. When we build things we like to see them work. It is much more difficult to convince many programmers to put the code creator hat aside, and put the test demolition hat in its place. But it is important. }
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When you're testing, its your job to break the code. That gives you a fundamentally different perspective. In many cases it is advisable to have a different person test code than the one who wrote it. Because for many people it is simply too hard for them to look at the code they just wrote and try to tear it apart.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Still, that's exactly what I'm advising you do. And many experienced programmers will back me up here when I say you'll thank yourself for it. Like many things, there is a balance to be had... but in general, the easier it is to regularly and thoroughly test your code, the faster development will go. ...Really! I'm not kidding.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When you're finding more bugs up-front, that pays dividends when you find yourself spending less time backtracking through old code you hardly recognize. When you facilitate the ability of your code's user base to run tests on their varied configurations you'll get better feedback and bug reports. Not to mention access to cross-platform feedback you'd be hard pressed to get otherwise. And it is easier to track down bugs as new features are introduced.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch So I was already preaching to the choir, or perhaps I've got you half convinced. Or maybe its just late at night, and you were hoping you'd already be asleep by now? So how do you test an Apache mod_perl module?}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb440\sa60\s16\sl240\slmult1\itap0{\f2\fs32\i\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Getting Started with Apache::Test}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Open a shell, make your way to a comfortable location and type:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch h2xs -AXn AxS::Session}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch h2xs is utility used originally to convert C header files into Perl extension (XS) code along with boiler plate files for new modules. Forgoing the C and XS aspects, which is what the -AX flags do, it is very useful when you wish to create a module. Executing the above results in the following:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing AxS/Session/Session.pm}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing }{\f2\fs24\lang1033{\*\listtag0}AxS/Session}{\f2\fs24\lang1033{\*\listtag0}/Makefile.PL}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing }{\f2\fs24\lang1033{\*\listtag0}AxS/Session}{\f2\fs24\lang1033{\*\listtag0}/README}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing }{\f2\fs24\lang1033{\*\listtag0}AxS/Session}{\f2\fs24\lang1033{\*\listtag0}/test.pl}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing }{\f2\fs24\lang1033{\*\listtag0}AxS/Session}{\f2\fs24\lang1033{\*\listtag0}/Changes}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing }{\f2\fs24\lang1033{\*\listtag0}AxS/Session}{\f2\fs24\lang1033{\*\listtag0}/MANIFEST}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To adapt the module boiler plate to support Apache::Test you need to do a few things. }{\f2\fs24\lang1033{\*\listtag0}First }{\f2\fs24\lang1033{\*\listtag0}delete test.pl. Apache::Test needs its own test directory. Next we need to shuffle file locations about a bit to facilitate Apache accessing the module during testing.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Move Session up to the same directory as its parent AxS, then delete AxS. Make a 'lib/AxS' directory under Session, and move Session.pm into it. You can then cut and paste the code listing for AxS::Session into Session.pm.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Next,}{\f2\fs24\lang1033{\*\listtag0} modify the standard Makefile.PL to enable Apache::Test as follows.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Before:}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use 5.008;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use ExtUtils::MakeMaker;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch # See lib/ExtUtils/MakeMaker.pm for details of how to influence}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch # the contents of the Makefile that is written.}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch WriteMakefile(}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     'NAME'         => 'AxS::Session',}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     'VERSION_FROM' => 'Session.pm', # finds $VERSION}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     'PREREQ_PM'    => \{\}, # e.g., Module::Name => 1.1}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     ($] >= 5.005 ?    ## Add these new keywords supported since 5.005}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       (ABSTRACT_FROM => 'Session.pm', # retrieve abstract from module}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch        AUTHOR        => 'Garrett Goebel <}{\f3\fs20\lang1033{\*\listtag0}garrett at scriptpro dot com}{\f3\fs20\lang1033{\*\listtag0}>') : ()),}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch );}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch After:}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use 5.008;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use ExtUtils::MakeMaker;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch # See lib/ExtUtils/MakeMaker.pm for details of how to influence}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch # the contents of the Makefile that is written.}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use lib qw(../blib/lib lib);}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Apache::TestMM qw(test clean);}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Apache::TestRunPerl ();}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Apache::TestMM::filter_args();}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Apache::TestRunPerl->generate_script();}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch WriteMakefile(}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     'NAME'\tab \tab => 'AxS::Session',}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}'VERSION_FROM'\tab => 'lib/AxS/Session.pm', # finds $VERSION}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}'PREREQ_PM'\tab \tab => \{ 'Apache::Test' => ''\},}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}'clean'             => \{ 'FILES' => 't/Test' \},}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch     ($] >= 5.005 ?}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch       (}{\cb2\highlight2\f3\fs20\lang1033{\*\listtag0}ABSTRACT_FROM => 'lib/AxS/Session.pm',}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch        AUTHOR     => 'Garrett Goebel <garrett at scriptpro dot com>') : ()),}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch );}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Next, create the t/TEST.PL file with the following contents:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #file:t/TEST.PL}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #--------------}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #!perl}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use strict;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use warnings FATAL => 'all';}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use lib qw(lib);}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Apache::TestRunPerl ();}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Apache::TestRunPerl->new->run(@ARGV);}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch You may notice the line "#!perl". When t/TEST.PL is used to generate t/TEST this will be replace with the location of the version of Perl used.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Apache needs a minimal configuration. Apache::Test provides the following defaults:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ServerRoot\tab \tab t/}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch DocumentRoot\tab t/htdocs}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrorLog\tab \tab t/logs/error_log}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Listen\tab \tab 8529}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch You can supplement the defaults with custom configuration directives. Create a directory t/conf. In this directory create an extra.conf.in file using the following listing. extra.conf.in can make use of the same directives you would find in httpd.conf. In fact, it is pulled into the httpd.conf via an Include directive.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #file:t/conf/extra.conf.in}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch #-------------------------}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch # this file will be Include-d by @ServerRoot@/httpd.conf}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch PerlModule AxS::Session}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch PerlTransHandler AxS::Session}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The pain is now over. Get started writing tests as you would for Test, Test::More, or Test::Harness. For example, create a file t/1.t:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Test;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch BEGIN \{ plan tests => 1 \};}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use AxS::Session;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ok(1); # If we made it this far, we're ok.}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Now recite the familiar mantra:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch perl Makefile.PL}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch make}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch make test}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch to see Apache::Test in action.}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch rx Session # make test}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch /usr/bin/perl -Iblib/arch -Iblib/lib \\}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST -clean}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** setting ulimit to allow core files}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ulimit -c unlimited; t/TEST -clean}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch APACHE_USER= APACHE_GROUP= APACHE_PORT= APACHE= APXS= \\}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch /usr/bin/perl -Iblib/arch -Iblib/lib \\}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST -verbose=0}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** setting ulimit to allow core files}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ulimit -c unlimited; t/TEST -verbose=0}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** root mode: changing the files ownership to 'nobody' (65534:65534)}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** sudo -u '#65534' /usr/bin/perl -e 'print -r "/home/ggoebel/src/AxS/Session/t" &&  -w _ && -x _ ? "OK" : "NOK"'}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch  }
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** result: OK}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch /usr/sbin/apache -X -d /home/ggoebel/src/AxS/Session/t -f /home/ggoebel/src/AxS/Session/t/conf/httpd.conf -DAPACHE1}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch using Apache/1.3.28}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch  }
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch waiting for server to start: .}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch waiting for server to start: ok (waited 0 secs)}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch server localhost:8529 started}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch 1....ok}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch All tests successful.}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Files=1, Tests=1,  0 wallclock secs ( 0.06 cusr +  0.02 csys =  0.08 CPU)}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** root mode: restoring the original files ownership}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch *** server localhost:8529 shutdown}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST is generated after "perl Makefile.PL" as a result of the line}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch Apache::TestRunPerl->generate_script();}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch So it isn't strictly necessary to do a "make test" to execute the test suite. A simple "t/TEST" will suffice. Apache::Test's t/TEST can be called with a plethora of options that can facilitate debugging:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST -start-httpd}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST -get /index.html}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST -stop-httpd}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To see the full list of what's available, try:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch t/TEST -help}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch For most tests however, you'll want to use Apache::Test instead of Test, Test::More, and the like. Rest assured however that Apache::Test gives you all that you were used to and more.  Create a t/2.t file containing the following:}
\par\pard\plain\ltrpar\ql\s2\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Apache::Test;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch use Apache::TestRequest;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch plan tests => 1, (have_lwp);}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch my $url = '/index.html';}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch my $response = GET $url;}
\par\pard\plain\ltrpar\ql\li720\s2\sl240\slmult1\itap0{\f3\fs20\lang1033{\*\listtag0}\abinodiroverride\ltrch ok $response->code == 200;}
\par\pard\plain\ltrpar\ql\sb440\sa60\s15\sl240\slmult1\itap0{\f2\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Summary}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Admittedly, I just scratched the surface. But hopefully I've scratched your itch, and you'll be wanting to know more. The best references for Apache::Test information are:}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}
\par{\listtext\pard\fi-431\li720\bullet 	}}\pard\plain{\ltrpar\ql\fi-431\li720\f0\fs24\lang1033{\*\listtag0}{\*\abilist\abilistid1003\abilistparentid0\abilistlevel1\abistartat0{\abifieldfont Symbol}{\abilistdecimal NULL}{\abilistdelim %L}{\abiliststyle Bullet List}}{\*\pn\pnql\pnstart0\pnlvlblt{\pntxtb\bullet}}\ls1\ilvl0\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch http://perl.apache.org/docs/general/testing/testing.html}
\par}{\listtext\pard\fi-431\li720\bullet 	}\pard\plain{\ltrpar\ql\fi-431\li720\f0\fs24\lang1033{\*\listtag0}{\*\abilist\abilistid1003\abilistparentid0\abilistlevel1\abistartat0{\abifieldfont Symbol}{\abilistdecimal NULL}{\abilistdelim %L}{\abiliststyle Bullet List}}{\*\pn\pnql\pnstart0\pnlvlblt{\pntxtb\bullet}}\ls1\ilvl0\sl240\slmult1\itap0{\f2\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch http://conferences.oreillynet.com/presentations/os2003/young_test.ppt}}}